/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
 };
&sk {
     release-after-ms = <2000>;
     quick-release;
 };


/ { 
        behaviors {
            agrave: agrave_macro {
		        compatible = "zmk,behavior-macro";
		        label = "AGRAVE";
		        #binding-cells = <0>;
		        bindings = <&kp LA(GRAVE)>, <&kp A>;
	        };
	        acirc: acirc_macro {
		        compatible = "zmk,behavior-macro";
		        label = "ACIRC";
		        #binding-cells = <0>;
		        bindings = <&kp LA(I)>, <&kp A>;
	        };
	        egrave: egrave_macro {
		        compatible = "zmk,behavior-macro";
		        label = "EGRAVE";
		        #binding-cells = <0>;
		        bindings = <&kp LA(GRAVE)>, <&kp E>;
	        };
	        eacute: eacute_macro {
		        compatible = "zmk,behavior-macro";
		        label = "EACUTE";
		        #binding-cells = <0>;
		        bindings = <&kp LA(E)>, <&kp E>;
	        };
	        ecirc: ecirc_macro {
		        compatible = "zmk,behavior-macro";
		        label = "ECIRC";
		        #binding-cells = <0>;
		        bindings = <&kp LA(I)>, <&kp E>;
	        };
	        euml: euml_macro {
		        compatible = "zmk,behavior-macro";
		        label = "EUML";
		        #binding-cells = <0>;
		        bindings = <&kp LA(U)>, <&kp E>;
	        };
	        ocirc: ocirc_macro {
		        compatible = "zmk,behavior-macro";
		        label = "OCIRC";
		        #binding-cells = <0>;
		        bindings = <&kp LA(I)>, <&kp O>;
	        };
	        ouml: ouml_macro {
		        compatible = "zmk,behavior-macro";
		        label = "OUML";
		        #binding-cells = <0>;
		        bindings = <&kp LA(U)>, <&kp O>;
	        };
	        icirc: icirc_macro {
		        compatible = "zmk,behavior-macro";
		        label = "ICIRC";
		        #binding-cells = <0>;
		        bindings = <&kp LA(I)>, <&kp I>;
	        };
	        iuml: iuml_macro {
		        compatible = "zmk,behavior-macro";
		        label = "IUML";
		        #binding-cells = <0>;
		        bindings = <&kp LA(U)>, <&kp I>;
	        };
	        ugrave: ugrave_macro {
		        compatible = "zmk,behavior-macro";
		        label = "UGRAVE";
		        #binding-cells = <0>;
		        bindings = <&kp LA(GRAVE)>, <&kp U>;
	        };
	        ucirc: ucirc_macro {
		        compatible = "zmk,behavior-macro";
		        label = "UCIRC";
		        #binding-cells = <0>;
		        bindings = <&kp LA(I)>, <&kp U>;
	        };
	        eqarrw: eqarrw_macro {
		        compatible = "zmk,behavior-macro";
		        label = "EQARRW";
		        #binding-cells = <0>;
		        bindings = <&kp KP_EQUAL>, <&kp GT>;
	        };
	        dasharrw: dasharrw_macro {
		        compatible = "zmk,behavior-macro";
		        label = "DASHARRW";
		        #binding-cells = <0>;
		        bindings = <&kp KP_MINUS>, <&kp GT>;
	        };
        
        };
        
        
        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
	    &kp TAB		&kp Q		&kp W		&kp F			&mt LS(LG(N4)) P	&kp B	 			&kp J		&mt LC(LS(C_PWR)) L	&lt 4 O			&kp Y				&kp SEMI		&kp BSPC
	    &caps_word	&lt 3 A		&kp R		&kp S			&kp T				&kp G	 			&kp H		&kp N				&lt 3 E			&lt 4 I				&lt 4 U			&mt GRAVE SQT
	    &kp LSHIFT	&kp Z		&kp X		&mt LA(C) C		&kp D				&kp V	 			&kp K		&kp M				&kp COMMA		&mt LA(SEMI) DOT	&mt BSLH FSLH	&kp RSHIFT
	    &kp CAPS	&kp LCTL	&kp LALT	&mt LGUI RET	&mt LSHIFT LG(BSPC)	&lt 1 ESC			&lt 2 TAB	&mt UNDER SPACE		&mt RCTL RET  	&kp LG(X)			&kp LG(C)		&kp LG(V)
		>;

		};
		
			num_layer {
		bindings = <
	    &trans	&kp EXCL	&kp AT					&kp LBKT	&kp RBKT	&kp PIPE			&mt KP_MINUS DASHARRW	&kp KP_N7	&kp KP_N8	&kp KP_N9	&kp KP_DIVIDE	&kp KP_MINUS
	    &trans	&kp HASH	&mt LA(LS(AT)) DOLLAR	&kp LPAR	&kp RPAR	&kp TILDE			&kp KP_PLUS				&kp KP_N4	&kp KP_N5	&kp KP_N6	&kp KP_N0		&kp KP_MULTIPLY
	    &trans	&kp PERCENT	&kp AMPS				&kp LBRC	&kp RBRC	&kp UNDER 			&kp KP_EQUAL EQARRW		&kp KP_N1	&kp KP_N2	&kp KP_N3	&kp KP_DOT		&kp KP_EQUAL
	    &trans	&trans		&trans					&trans		&trans		&trans 				&trans					&trans		&trans		&trans		&trans			&trans
		>;
		
		};
			arrow_layer {
		bindings = <
	    &trans	&kp F1	&kp F2	&kp F3	&kp F4	&kp F5			&kp K_MUTE	&kp C_VOL_DN	&kp C_VOL_UP	&kp C_PP	&trans		&trans
	    &trans	&kp F6	&kp F7  &kp F8	&kp F9	&kp F10			&kp LEFT	&kp DOWN		&kp UP			&kp RIGHT	&trans		&trans
	    &trans	&trans	&trans	&trans	&trans	&trans			&trans		&kp C_BRI_DN	&kp C_BRI_UP	&trans		&trans		&trans
	    &trans	&trans	&trans	&trans	&trans	&trans			&trans		&trans			&trans			&trans		&trans		&trans
		>;
		
		};
			ae_layer {
		bindings = <
	    &trans	&trans	&trans	&trans	&trans	&trans			&trans	&trans	&trans	&ecirc	&ucirc	&trans
	    &trans	&trans	&agrave &trans	&trans	&trans			&trans	&eacute	&trans	&egrave	&trans	&trans
	    &trans	&trans	&acirc	&trans	&trans	&trans			&trans	&euml	&trans	&trans	&trans	&trans
	    &trans	&trans	&trans	&trans	&trans	&trans			&trans	&trans	&trans	&trans	&trans	&trans
		>;
		
		};
			oui_layer {
		bindings = <
	    &trans	&trans	&trans	&trans	&trans	&trans			&trans	&ocirc	&trans	&ouml	&trans	&trans
	    &trans	&trans	&trans	&trans	&trans	&trans			&trans	&trans	&icirc	&ugrave	&iuml	&trans
	    &trans	&trans	&trans	&trans	&trans	&trans			&trans	&trans	&trans	&ucirc	&trans	&trans
	    &trans	&trans	&trans	&trans	&trans	&trans			&trans	&trans	&trans	&trans	&trans	&trans
		>;
		
		};
	};
};
